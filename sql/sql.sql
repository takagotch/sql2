SELECT * FROM "SELECT"
SELECT * FROM [SELECT]
SELECT * FROM 'SELECT'

TABLE
INDEX
VIEW
PROCEDURE
FUNCTION
TRIGGER
SEQUENCE
SYNONYM



'string' "string"

char* sql = "SELECT * FROM foo WHERE a = 'abc'";

char* sql = "SELECT * FROM foo WHERE a = 'abc'";

'tky''s' -> Tky's

SELECT * FROM FOO
select * from foo
Select * From Foo

SELECT * FROM FOO WHERE NAME = 'ABC'
select * from foo where name = 'abc'

'2001-11-11' '2011/12/14' '2011-01-01 13:13:13'

TO_DATE('2000/04/12', 'YYYY/MM/DD')

TIMESTAMP_FORMAT('2018-04-01', 'YYYY/MM/DD')

'2018-03-28'
'2018-03-22 12:10:30'
'08:00:00'

SELECT a + INTERVAL '10' HOUR FROM foo

INTERVAL '3-4' YEAR(1) TO MONTH

INTERVAL '10 8' DAY(2) TO HOUR

SELECT a + 10 DAYS FROM foo

SELECT a + INTERVAL '10 HOUR' FROM foo

SELECT a + '10 HOUR' FROM foo

SELECT a + INTERVAL 10 HOUR FROM foo

SELECT DATETIME(a, '1 year') FROM foo
SELECT DATETIME(a, '1 year') FROM foo

SELECT /* */ one FROM foo /* */


/* psgl

SMALLINT
INT2
INTEGER
INT
INT4
BIGINT
INTB
NUMERIC[(n[,m])]
DECIMAL

REAL
FLOAT4
DOUBLE PRECISION
FLOATB

DATE
TIME[WITH OUT TIME ZONE]
TINE WITH TIME ZONE
TIMESTAMP[WITH TIME ZONE]
INTERVAL

CHAR[(n)]
CHARACTER
VARCHAR(n)
CHARACTERVARYING
TEXT

XML

POINT
LINE
LSEG
BOX
PATH
POLYGON
CIRCLE

INET
CIDR
MACADDR

*/


SELECT * FROM B.foo

SELECT
INSERT
UPDATE
DELETE
EXECUTE
REFERENCES
ALL


SELECT staff_num, name 
FROM staff WHERE out<>1

//CREATE TRIGGER
UPDATE staff SET out = 1 WHERE staff_num = 4

IF :new.out = 1 THEN
  DELETE work_histroy WHERE staff_num = :new.staff_num
END IF


//CREATE SEQUENCE
INSERT INTO staff VALUES(staff_num.NEXTVAL, 'tky',225000,0)


//CREATE SYNONYM
SELECT * FROM S
table foo



