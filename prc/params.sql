//Params
//IO OUT INOUT
//
//oracle
DECLARE
  PROCEDURE foo(a IN NUMBER) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(NUMBER)');
  END;
  PROCEDURE foo(a IN VARCHAR2, b NUMBER) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(VARCHAR2,NUMBER)');
  END;
BEGIN
  foo(1);
  foo('abc',2)
END;

//oracle REAL INTEGER params
DECLARE
  PROCEDURE foo(a IN REAL) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(REAL)');
  END;
  PROCEDURE foo(a IN INTEGER) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(INTEGER)');
  END;
BEGIN
  foo(1);
END;

//oracle IN params OUT prams ERR
DECLARE
  PROCEDURE foo(a IN INTEGER) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(IN INTEGER)');
  END;
  PROCEDURE foo(a OUT INTEGER) IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE('foo(OUT INEGER)');
  END;
BEGIN
  foo(1);
END;

//DB2 PROCEDURE
CREATE PROCEDURE foo(IN a INTEGER, IN b INTEGER)
  LANGUAGE SQL
BEGIN
END

CREATE PROCEDURE foo(IN a VARCHAR(20)) LANGUAGE SQL
BEGIN
END
//DB2 FNC
CREATE FUNCTION foo(a CHAR(20)) RETURNS VARCHAR(30)
  LANGUAGE SQL
RETURN a || 'char';

CRATE FUNCTION foo(a VARCHAR(20)) RETURNS VARCHAR(30)
  LANGUAGE SQL
RETURN a || 'varchar';



//psgl FNC
CREATE FUNCTION foo(INTEGER, INTEGER) RETURNS INTEGER AS $$
BEGIN
  RAISE NOTICE 'foo(INTEGER.INTEGER)';
  RETURN $1;
END;$$ LANGUAGE 'plpgsql'

CREATE FUNCTION foo(VARCHAR) RETURNS VARCHAR AS $$
BEGIN
  RAISE NOTICE 'foo(VARCHAR)';
  RETURN $1;
END;$$ LANGUAGE 'plpgsql'


CREATE FUNCTION foo(INTEGER) RETURNS INTEGER AS $$
BEGIN ... END;$$ LANGUAGE 'plpgsql'

CREATE FUNCTION foo(INTEGER) RETURNS VARCHAR AS $$
BEGIN ... END;$$ LANGUAGE 'plpgsql'


CREATE FUNCTION foo(CHAR(20)) RETURNS VARCHAR AS $$
BEGIN ... END;$$ LANGUAGE 'plpgsql'

CREATE FUNCTION foo(VARCHAR(20)) RETURNS VARCHAR AS $$
BEGIN ... END;$$ LANGUAGE 'plpgsql'

//psgl VARCHAR,CHAR
SELECT foo(VARCHAR 'sql');
SELECT foo(CAST('abc' AS CHAR(20)));






---


